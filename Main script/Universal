--[[if getgenv().keykami ~= "LLL" then
    game.Players.LocalPlayer:Kick("1.请使用官方加载器进行加载卡密 qq群已复制")
    setclipboard("1063412916")
end
if not getgenv().LoaderVerifiedezlol then
game.Players.LocalPlayer:Kick("2.请使用官方加载器进行加载 qq群已复制")
setclipboard("1063412916")
end
getgenv().keykami = nil
getgenv().LoaderVerifiedezlol = nil]]
local repo = "https://raw.githubusercontent.com/deividcomsono/Obsidian/main/"
local Library = loadstring(game:HttpGet(repo .. "Library.lua"))()
local ThemeManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/wszzx2013/yezx/refs/heads/main/Obsidian%20ui/主题"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/wszzx2013/yezx/refs/heads/main/Obsidian%20ui/配置"))()
local ESPLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/mstudio45/MSESP/refs/heads/main/source.luau"))()
local player = game.Players.LocalPlayer
local Options = Library.Options
local Toggles = Library.Toggles
local Window = Library:CreateWindow({
    Title = "yezx Hub",
    Footer = "游戏: 通用",
    ToggleKeybind = Enum.KeyCode.RightShift,
    Center = true,
    AutoShow = true,
    ShowCustomCursor = false,
    MobileButtonsSide = "Left",
    Icon = 72245506841491,
})

local Tabs = {
    homeTab = Window:AddTab("首页", "door-closed"),
    mainTab = Window:AddTab("主要", "house"),
    ESPTab = Window:AddTab("视觉", "view"),
    infoTab = Window:AddTab("信息", "info"),
    ["UI Settings"] = Window:AddTab("设置", "settings"),
}

local AccountGroup = Tabs.homeTab:AddLeftGroupbox("账户")
local InfoGroup = Tabs.homeTab:AddRightGroupbox("信息")

local PlayerGroup = Tabs.mainTab:AddLeftGroupbox("玩家")
local ESPBox = Tabs.ESPTab:AddLeftTabbox("ESP 设置")

local ESPSubTab = ESPBox:AddTab("透视")
local SettingsSubTab = ESPBox:AddTab("设置")

local devGroup = Tabs.infoTab:AddLeftGroupbox("开发人员")

Library:SetWatermarkVisibility(true)

local FrameTimer = tick()
local FrameCounter = 0
local FPS = 60

local function GetBeijingTime()
    local localTime = os.date("*t")
    return string.format("%02d:%02d:%02d", 
        localTime.hour, localTime.min, localTime.sec)
end

local WatermarkConnection = game:GetService('RunService').RenderStepped:Connect(function()
    FrameCounter = FrameCounter + 1
    
    if (tick() - FrameTimer) >= 1 then
        FPS = FrameCounter
        FrameTimer = tick()
        FrameCounter = 0
    end
    
    Library:SetWatermark(('yezx hub | %s fps | %s ms | 本地时间: %s'):format(
        math.floor(FPS),
        math.floor(game:GetService('Stats').Network.ServerStatsItem['Data Ping']:GetValue()),
        GetBeijingTime()
    ))
end)

local MenuGroup = Tabs["UI Settings"]:AddLeftGroupbox("菜单设置", "")

MenuGroup:AddToggle("KeybindMenuOpen", {
    Default = Library.KeybindFrame.Visible,
    Text = "显示键位菜单",
    Callback = function(value)
        Library.KeybindFrame.Visible = value
    end,
})

MenuGroup:AddToggle("ShowCustomCursor", {
    Text = "自定义光标",
    Default = false,
    Callback = function(Value)
        Library.ShowCustomCursor = Value
    end,
})

MenuGroup:AddDropdown("NotificationSide", {
    Values = { "左侧", "右侧" },
    Default = "右侧",
    Text = "通知位置",
    Callback = function(Value)
        Library:SetNotifySide(Value == "左侧" and "Left" or "Right")
    end,
})

MenuGroup:AddDropdown("DPIDropdown", {
    Values = { "50%", "75%", "100%", "125%", "150%", "175%", "200%" },
    Default = "100%",
    Text = "ui大小",
    Callback = function(Value)
        Value = Value:gsub("%%", "")
        local DPI = tonumber(Value)
        Library:SetDPIScale(DPI)
    end,
})

MenuGroup:AddDivider()
MenuGroup:AddLabel("隐藏UI键位")
	:AddKeyPicker("MenuKeybind",{
    Default = "RightShift", 
    NoUI = true, 
    Text = "Menu keybind"
    })

MenuGroup:AddButton("卸载UI", function()
	Library:Unload()
end)

Library.ToggleKeybind = Options.MenuKeybind

ThemeManager:SetLibrary(Library)
ThemeManager:SetFolder("yezxHub")
SaveManager:SetLibrary(Library)
SaveManager:SetIgnoreIndexes({ "MenuKeybind" })
SaveManager:SetFolder("yezxHub")
SaveManager:SetSubFolder("Universal")
ThemeManager:ApplyToTab(Tabs["UI Settings"])
SaveManager:BuildConfigSection(Tabs["UI Settings"])
SaveManager:LoadAutoloadConfig()

local function loadPlayerAvatar()
    local success, result = pcall(function()
        local thumbnailInfo = game:GetService("Players"):GetUserThumbnailAsync(
            player.UserId,
            Enum.ThumbnailType.HeadShot,
            Enum.ThumbnailSize.Size180x180
        )
        return thumbnailInfo
    end)
    
    if success then
        return result
    end
    return nil
end
local avatarImage = AccountGroup:AddImage("UserAvatar", {
    Image = "rbxassetid://0",
    Height = 200,
    ScaleType = Fit,
    Transparency = 0
})
task.spawn(function()
    local avatarUrl = loadPlayerAvatar()
    if avatarUrl then
        avatarImage:SetImage(avatarUrl)
    else
        local initial = string.sub(player.Name, 1, 1):upper()
        AccoutGroup:AddLabel("头像加载失败")
        AccoutGroup:AddLabel("你好: " .. initial)
    end
end)
AccountGroup:AddLabel("你好, "..player.DisplayName.."! 欢迎使用yezx!!!")
AccountGroup:AddLabel("你的客户端id:"..game:GetService("RbxAnalyticsService"):GetClientId())
AccountGroup:AddLabel("你的账号年龄:"..game.Players.LocalPlayer.AccountAge.."天")
AccountGroup:AddLabel("你的账号ID:"..game.Players.LocalPlayer.UserId)
InfoGroup:AddLabel("🟢可使用🔴不使用🟡修复🔵制作中")
InfoGroup:AddLabel("目前支持服务器:")
InfoGroup:AddLabel("🟢 通用")
InfoGroup:AddLabel("🔵 破坏者谜团2")
InfoGroup:AddLabel("当前服务器id:"..game.GameId)
InfoGroup:AddLabel("当前游戏:"..game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name)
InfoGroup:AddLabel("你的注入器:"..identifyexecutor())

local originalWalkSpeed = 16
local originalJumpPower = 50
task.spawn(function()
    task.wait(1)
    if game.Players.LocalPlayer.Character then
        local humanoid = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            originalWalkSpeed = humanoid.WalkSpeed
            originalJumpPower = humanoid.JumpPower
        end
    end
end)

local SpeedToggle = PlayerGroup:AddCheckbox("SpeedHack", {
    Text = "启用速度",
    Default = false,
    Callback = function(Value)
        _G.speedhack = Value
        updateMovement()
    end
})

local SpeedSlider = PlayerGroup:AddSlider("WalkSpeed", {
    Text = "速度",
    Default = originalWalkSpeed,
    Min = 0,
    Max = 200,
    Rounding = 0,
    Callback = function(Value)
        if _G.speedhack then
            updateMovement()
        end
    end
})

local JumpToggle = PlayerGroup:AddCheckbox("JumpHack", {
    Text = "启用跳跃",
    Default = false,
    Callback = function(Value)
        _G.jumphack = Value
        updateMovement()
    end
})

local JumpSlider = PlayerGroup:AddSlider("JumpPower", {
    Text = "跳跃",
    Default = originalJumpPower,
    Min = 0,
    Max = 200,
    Rounding = 0,
    Callback = function(Value)
        if _G.jumphack then
            updateMovement()
        end
    end
})
function updateMovement()
    if not game.Players.LocalPlayer.Character then return end
    
    local humanoid = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    if not humanoid then return end
    
    if _G.speedhack then
        humanoid.WalkSpeed = Options.WalkSpeed.Value
    else
        humanoid.WalkSpeed = originalWalkSpeed
    end
    
    if _G.jumphack then
        humanoid.JumpPower = Options.JumpPower.Value
    else
        humanoid.JumpPower = originalJumpPower
    end
end
game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
    task.wait(0.1)
    updateMovement()
    character:WaitForChild("Humanoid")
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
            if not _G.speedhack then
                originalWalkSpeed = humanoid.WalkSpeed
            end
        end)
        
        humanoid:GetPropertyChangedSignal("JumpPower"):Connect(function()
            if not _G.jumphack then
                originalJumpPower = humanoid.JumpPower
            end
        end)
    end
end)
game.Players.LocalPlayer.CharacterRemoving:Connect(function()
    originalWalkSpeed = 16
    originalJumpPower = 50
end)
PlayerGroup:AddLabel("有些注入器关闭重新开启后需要重新\n调整滑块速度")

local ESPManager = {
    Players = {},
    Connections = {},
    Enabled = false
}
local Settings = {
    Color = Color3.new(1, 1, 1),
    Type = "Highlight",
    ShowText = true,
    ShowHighlight = true,
    Transparency = 0.75,
    FillTransparency = 0.75,
    OutlineTransparency = 0,
    ShowDistance = true,
    TextSize = 22,
    ShowLines = false,
    LinePosition = "Bottom",
    ShowArrows = false,
    ArrowOffset = 300
}
ESPLibrary.GlobalConfig = {
    IgnoreCharacter = false,
    Rainbow = false,
    Billboards = true,
    Distance = true,
    Highlighters = true,
    Tracers = false,
    Arrows = false,
    Font = Enum.Font.RobotoCondensed
}
local PlayerESPToggle = ESPSubTab:AddToggle("PlayerESP", {
    Text = "玩家",
    Default = false,
    Callback = function(Value)
        ESPManager.Enabled = Value
        if Value then
            ESPManager:Enable()
        else
            ESPManager:Disable()
        end
    end
})

local PlayerColorPicker = PlayerESPToggle:AddColorPicker("PlayerColor", {
    Default = Color3.new(1, 1, 1),
    Title = "玩家颜色",
    Callback = function(Value)
        Settings.Color = Value
        ESPManager:UpdateAllPlayers()
    end
})
local ESPTypeDropdown = SettingsSubTab:AddDropdown("ESPType", {
    Values = {"Highlight", "SelectionBox", "Adornment", "CylinderAdornment", "SphereAdornment", "Text"},
    Default = "Highlight",
    Text = "ESP 类型",
    Callback = function(Value)
        Settings.Type = Value
        ESPManager:RecreateAllPlayers()
    end
})

SettingsSubTab:AddDivider()

local RainbowESPToggle = SettingsSubTab:AddToggle("RainbowESP", {
    Text = "彩虹模式",
    Default = false,
    Callback = function(Value)
        ESPLibrary.GlobalConfig.Rainbow = Value
    end
})

SettingsSubTab:AddDivider()

local TextToggle = SettingsSubTab:AddToggle("ShowText", {
    Text = "启用文本",
    Default = true,
    Callback = function(Value)
        Settings.ShowText = Value
        ESPLibrary.GlobalConfig.Billboards = Value
        ESPManager:UpdateAllPlayers()
    end
})

local HighlightToggle = SettingsSubTab:AddToggle("ShowHighlight", {
    Text = "启用高亮显示",
    Default = true,
    Callback = function(Value)
        Settings.ShowHighlight = Value
        ESPLibrary.GlobalConfig.Highlighters = Value
        ESPManager:UpdateAllPlayers()
    end
})
local TransparencySlider = SettingsSubTab:AddSlider("Transparency", {
    Text = "透明度",
    Default = 0.75,
    Min = 0,
    Max = 1,
    Rounding = 2,
    Callback = function(Value)
        Settings.Transparency = Value
        ESPManager:UpdateTransparency(Value)
    end
})

local FillTransparencySlider = SettingsSubTab:AddSlider("FillTransparency", {
    Text = "填充透明度",
    Default = 0.75,
    Min = 0,
    Max = 1,
    Rounding = 2,
    Callback = function(Value)
        Settings.FillTransparency = Value
        ESPManager:UpdateFillTransparency(Value)
    end
})

local OutlineTransparencySlider = SettingsSubTab:AddSlider("OutlineTransparency", {
    Text = "轮廓透明度",
    Default = 0,
    Min = 0,
    Max = 1,
    Rounding = 2,
    Callback = function(Value)
        Settings.OutlineTransparency = Value
        ESPManager:UpdateOutlineTransparency(Value)
    end
})

SettingsSubTab:AddDivider()

local DistanceToggle = SettingsSubTab:AddToggle("ShowDistance", {
    Text = "显示距离",
    Default = true,
    Callback = function(Value)
        Settings.ShowDistance = Value
        ESPLibrary.GlobalConfig.Distance = Value
        ESPManager:UpdateAllPlayers()
    end
})

local TextSizeSlider = SettingsSubTab:AddSlider("TextSize", {
    Text = "文本大小",
    Default = 22,
    Min = 0,
    Max = 26,
    Rounding = 0,
    Callback = function(Value)
        Settings.TextSize = Value
        ESPManager:UpdateAllPlayers()
    end
})

SettingsSubTab:AddDivider()

local LineToggle = SettingsSubTab:AddToggle("ShowLines", {
    Text = "启用线条",
    Default = false,
    Callback = function(Value)
        Settings.ShowLines = Value
        ESPLibrary.GlobalConfig.Tracers = Value
        ESPManager:RecreateAllPlayers()
    end
})

local LinePositionDropdown = SettingsSubTab:AddDropdown("LinePosition", {
    Values = {"Bottom", "Center", "Top", "Mouse"},
    Default = "Bottom",
    Text = "线条位置",
    Callback = function(Value)
        Settings.LinePosition = Value
        ESPManager:RecreateAllPlayers()
    end
})

SettingsSubTab:AddDivider()

local ArrowToggle = SettingsSubTab:AddToggle("ShowArrows", {
    Text = "启用箭头",
    Default = false,
    Callback = function(Value)
        Settings.ShowArrows = Value
        ESPLibrary.GlobalConfig.Arrows = Value
        ESPManager:RecreateAllPlayers()
    end
})

local ArrowOffsetSlider = SettingsSubTab:AddSlider("ArrowOffset", {
    Text = "箭头中心偏移",
    Default = 300,
    Min = 0,
    Max = 500,
    Rounding = 0,
    Callback = function(Value)
        Settings.ArrowOffset = Value
        ESPManager:UpdateArrowOffsets(Value)
    end
})
function ESPManager:Enable()
    self:Disable()
    
    for _, player in ipairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer then
            self:AddPlayer(player)
        end
    end
    
    self.Connections.PlayerAdded = game.Players.PlayerAdded:Connect(function(player)
        if player ~= game.Players.LocalPlayer then
            self:AddPlayer(player)
        end
    end)
    
    self.Connections.PlayerRemoving = game.Players.PlayerRemoving:Connect(function(player)
        self:RemovePlayer(player)
    end)
end

function ESPManager:Disable()
    for player, esp in pairs(self.Players) do
        if esp then
            pcall(esp.Destroy, esp)
        end
    end
    self.Players = {}
    
    for _, conn in pairs(self.Connections) do
        conn:Disconnect()
    end
    self.Connections = {}
end

function ESPManager:AddPlayer(player)
    if self.Players[player] then return end
    
    local function setupESP(character)
        if not character or not character:IsDescendantOf(workspace) then return end
        
        pcall(function()
            local humanoidRootPart = character:WaitForChild("HumanoidRootPart", 2)
            if not humanoidRootPart then return end
            local espSettings = {
                Name = player.Name,
                Model = character,
                Color = Settings.Color,
                MaxDistance = 5000,
                TextSize = Settings.TextSize,
                ESPType = Settings.Type,
                
                FillColor = Settings.Color,
                OutlineColor = Settings.Color,
                FillTransparency = Settings.FillTransparency,
                OutlineTransparency = Settings.OutlineTransparency,
                Transparency = Settings.Transparency
            }
            
            if Settings.ShowLines then
                espSettings.Tracer = {
                    Enabled = true,
                    Color = Settings.Color,
                    From = Settings.LinePosition,
                    Thickness = 2,
                    Transparency = 0
                }
            end
            
            if Settings.ShowArrows then
                espSettings.Arrow = {
                    Enabled = true,
                    Color = Settings.Color,
                    CenterOffset = Settings.ArrowOffset
                }
            end
            
            local esp = ESPLibrary:Add(espSettings)
            self.Players[player] = esp
        end)
    end
    
    if player.Character then
        setupESP(player.Character)
    end
    
    self.Connections[player] = player.CharacterAdded:Connect(setupESP)
end

function ESPManager:RemovePlayer(player)
    if self.Players[player] then
        pcall(function()
            self.Players[player]:Destroy()
        end)
        self.Players[player] = nil
    end
end
function ESPManager:UpdateTransparency(value)
    if not self.Enabled then return end
    
    for player, esp in pairs(self.Players) do
        if esp and esp.CurrentSettings then
            pcall(function()
                esp.CurrentSettings.Transparency = value
            end)
        end
    end
end

function ESPManager:UpdateFillTransparency(value)
    if not self.Enabled then return end
    
    for player, esp in pairs(self.Players) do
        if esp and esp.CurrentSettings then
            pcall(function()
                esp.CurrentSettings.FillTransparency = value
            end)
        end
    end
end

function ESPManager:UpdateOutlineTransparency(value)
    if not self.Enabled then return end
    
    for player, esp in pairs(self.Players) do
        if esp and esp.CurrentSettings then
            pcall(function()
                esp.CurrentSettings.OutlineTransparency = value
            end)
        end
    end
end

function ESPManager:UpdateAllPlayers()
    if not self.Enabled then return end
    
    for player, esp in pairs(self.Players) do
        if esp and esp.CurrentSettings then
            pcall(function()
                esp.CurrentSettings.Color = Settings.Color
                esp.CurrentSettings.FillColor = Settings.Color
                esp.CurrentSettings.OutlineColor = Settings.Color
                esp.CurrentSettings.TextSize = Settings.TextSize
            end)
        end
    end
end

function ESPManager:RecreateAllPlayers()
    if not self.Enabled then return end
    
    local wasEnabled = self.Enabled
    self:Disable()
    
    if wasEnabled then
        task.wait(0.1)
        self:Enable()
    end
end

function ESPManager:UpdateArrowOffsets(offset)
    if not self.Enabled then return end
    
    for player, esp in pairs(self.Players) do
        if esp and esp.CurrentSettings and esp.CurrentSettings.Arrow then
            pcall(function()
                esp.CurrentSettings.Arrow.CenterOffset = offset
            end)
        end
    end
end
Library.OnUnload = function()
    ESPManager:Disable()
end

devGroup:AddLabel('[<font color="rgb(255, 0, 0)">Tu</font>] 主要开发员')
devGroup:AddLabel('[<font color="rgb(255, 221, 0)">卡卡大王</font>] 主要管理员')
Library:Notify({
    Title = "yezx Hub",
    Description = "脚本加载完成！",
    Time = 3
})
